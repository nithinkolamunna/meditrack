name: Deploy Appointment Service to EKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build and Deploy Appointment Service
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Configure AWS credentials for mediTrackUser
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step 3: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # Step 4: Build and push Docker image
      - name: Build and Push Docker Image to ECR
        run: |
          IMAGE_TAG="appointment-service"
          ECR_REPO="183295407444.dkr.ecr.us-east-1.amazonaws.com/meditrack"

          # Navigate to the appointment service directory
          cd appointment

          # Build the Docker image
          docker build -t $ECR_REPO:$IMAGE_TAG .

          # Push the Docker image to ECR
          docker push $ECR_REPO:$IMAGE_TAG

      # Step 5: Update EKS Deployment
      - name: Update Kubernetes Deployment
        run: |
          IMAGE_TAG="appointment-service"
          ECR_REPO="183295407444.dkr.ecr.us-east-1.amazonaws.com/meditrack"
          
          # Navigate to the YAML directory
          cd ../ymal

          # Apply the deployment changes for appointment service
          kubectl set image deployment/appointment-service appointment-service=$ECR_REPO:$IMAGE_TAG --kubeconfig=${{ secrets.KUBECONFIG }}

          # Ensure the rollout was successful
          kubectl rollout status deployment/appointment-service --kubeconfig=${{ secrets.KUBECONFIG }}
